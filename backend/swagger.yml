openapi: 3.0.0
info:
  title: Medical Record API
  description: "API with test medical records for setting up appointments and managing patient data."
  version: 1.0.0

servers:
  - url: "/api" # base path for all endpoints

components:
  schemas:
    diagnosis:
      type: object
      properties:
        ID:
          type: integer
        prompt:
          type: string
      required:
        - ID
        - prompt
    question:
      type: object
      properties:
        question:
          type: string
        answer:
          type: string
        timestamp:
          type: string
      required:
        - question
        - answer
    Address:
      type: object
      properties:
        street:
          type: string
        city:
          type: string
        state:
          type: string
        zip:
          type: string
      required:
        - street
        - city
        - state
        - zip
    contact:
      type: object
      properties:
        phone:
          type: string
        email:
          type: string
      required:
        - phone
        - email
    emergency_contact:
      type: object
      properties:
        name:
          type: string
        relationship:
          type: string
        phone:
          type: string
        email:
          type: string
      required:
        - name
        - relationship
        - phone
        - email
    DetailedPatientRecord:
      type: object
      properties:
        ID:
          type: integer
        name:
          type: string
        age:
          type: integer
        recent_changes_in_health_yn:
          type: boolean
        pre_existing_conditions:
          type: array
          items:
            type: string
        medications:
          type: array
          items:
            $ref: '#/components/schemas/Medication'
        any_allergies_yn:
          type: boolean
        allergies:
          type: array
          items:
            $ref: '#/components/schemas/Allergy'
        symptoms:
          type: array
          items:
            $ref: '#/components/schemas/Symptom'
        lifestyle_factors:
          $ref: '#/components/schemas/LifestyleFactors'
        recent_travel_history:
          type: string
        recent_exposure_to_sick_individuals:
          type: boolean
        family_history_of_illnesses:
          type: string
        address:
          $ref: '#/components/schemas/Address'
        contact:
          $ref: '#/components/schemas/contact'
        emergency_contact:
          $ref: '#/components/schemas/emergency_contact'
        questions:
          type: array
          items:
            $ref: '#/components/schemas/question'
      required:
        - ID
        - name
        - age
        - recent_changes_in_health_yn
        - pre_existing_conditions
        - medications
        - any_allergies_yn
        - allergies
        - symptoms
        - lifestyle_factors
        - recent_travel_history
        - recent_exposure_to_sick_individuals
        - family_history_of_illnesses
    Medication:
      type: object
      properties:
        name:
          type: string
        dosage:
          type: string
        reason_for_taking:
          type: string
    Allergy:
      type: object
      properties:
        substance:
          type: string
        reaction:
          type: string
    Symptom:
      type: object
      properties:
        symptom:
          type: string
        duration:
          type: string
        severity:
          type: string
        how_it_affects_daily_life:
          type: string
    LifestyleFactors:
      type: object
      properties:
        diet:
          type: string
        exercise:
          type: string
        stress_level:
          type: string
        sleep_quality:
          type: string
paths:
  /patient:
    get:
      summary: Returns a list of all patients
      operationId: api.get_patients
      responses:
        '200':
          description: A JSON array of patients
          content:
            application/json:
              schema: 
                type: array
                items: 
                  $ref: '#/components/schemas/DetailedPatientRecord'
    post:
      summary: Creates a new patient
      operationId: api.create_patient_initial
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DetailedPatientRecord'
      responses:
        '201':
          description: Patient created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedPatientRecord'
        '400':
          description: Invalid input
  /patient/{ID}:
    get:
      summary: Returns a patient by ID
      operationId: api.get_patient_by_ID
      parameters:
        - name: ID
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: A patient
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedPatientRecord'
        '404':
          description: Patient not found
    put:
      summary: Updates a patient
      operationId: api.update_patient
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DetailedPatientRecord'
      responses:
        '200':
          description: Patient updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedPatientRecord'
        '404':
          description: Patient not found
  /chat:
    post:
      summary: Return diagnosis
      operationId: api.get_diagnosis_by_id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/diagnosis'
      responses:
        '200':
          description: Diagnosis
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/diagnosis'
        '404':
          description: Diagnosis not found
