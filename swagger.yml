# swagger.yml
# blueprint for the API - for frontend to use
# define the data your web server can expect 
# how server should respond to requests

openapi: 3.0.0
info:
  title: Sample API
  description: "A test api with people and notes"
  version: 1.0.0

servers:
  - url: "/api" # base path for all endpoints

components:
  schemas:
    Person:
      type: object
      properties:
        name:
          type: string
        age:
          type: integer
      # TODO: change to id and name
      # both name and age are required for a person
      required:
        - name
        - age
paths:
  /people: #relative path
    get: #
      summary: Returns a list of people
      operationId: api.get_people
      responses:
        '200':    # HTTP status code
          description: A JSON array of people
          content:
            application/json:    # Media type
              schema: 
                type: array
                items: 
                  type: object
                  properties:
                    name:
                      type: string
                    age:
                      type: integer
  #TODO: change to ID
  /people/{name}: 
    get:
      summary: Returns a person by name
      operationId: api.get_person
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A person
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
                # above replaces the following:!!
                # type: object
                # properties:
                #   name:
                #     type: string
                #   age:
                #     type: integer
        '404':
          description: Person not found
    # post:
    #   summary: Adds a new person
    #   operationId: api.add_person
    #   requestBody:
    #     required: true
    #     content:
    #       application/json:
    #         schema:
    #           type: object
    #           required:
    #             - name
    #             - age
    #           properties:
    #             name:
    #               type: string
    #             age:
    #               type: integer
    #   responses:
    #     '201':
    #       description: Person created

